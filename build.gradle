import com.matyrobbrt.gradle.jarinjar.task.AbstractJarInJarTask

plugins {
    id 'idea'
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'com.matyrobbrt.jarinjar' version '1.2.0'
    id 'net.neoforged.gradle.userdev' version '7.0.96'
}

group = 'org.sinytra.mixinbooster'
version = version + '+' + minecraft_version

java {
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sourceSets {
    mod
    dummy
}

final fullJar = tasks.register("fullJar", AbstractJarInJarTask)

runs {
    configureEach {
        modSource sourceSets.main
        dependencies {
            runtime(files(fullJar.map { it.archiveFile }))
        }
    }
    client {}
}

configurations {
    shadedImplementation { transitive = false }
    fabricMixin {
        transitive = false
    }
    implementation.extendsFrom(shadedImplementation)
    compileOnly.extendsFrom(fabricMixin)
}

processResources {
    inputs.property('version', project.version)
    expand([version: project.version])
}

repositories {
    maven {
        name = 'Fabric'
        url = 'https://maven.fabricmc.net/'
    }
    maven {
        name = 'Sinytra'
        url = 'https://maven.su5ed.dev/releases/'
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neoforge_version}"
    fabricMixin "dev.su5ed.sinytra:sponge-mixin:${mixin_version}"
}

tasks.register('modJar', Jar) {
    from(sourceSets.mod.output)
    manifest.attributes([
            'Implementation-Version': project.version,
            'Automatic-Module-Name': 'mixinbooster'
    ])
    archiveClassifier = 'mod'
}

jar {
    archiveClassifier = "slim"
}

shadowJar {
    from("licenses") {
        into "META-INF/"
    }
    from("LICENSE.txt") {
        into "META-INF/"
    }
    // Exclude dependency licenses since we include them ourselves
    exclude "**/LICENSE*"
    exclude "**/NOTICE*"
    exclude "META-INF/maven/**"
    exclude "META-INF/versions/**"

    archiveClassifier = "shadow"
    configurations = [project.configurations.shadedImplementation]
}

fullJar.configure {
    dependsOn(shadowJar)
    manifest.from(jar.manifest)
    from(zipTree(shadowJar.archiveFile))
    from(provider{ configurations.fabricMixin.singleFile }) {
        rename { "fabric-mixin.jar" }
    }
    fromJar(tasks.modJar) {
        path = 'transmog-mod.jar'
    }
    jarDestinationDirectory = ''
    archiveClassifier = ""
}

assemble.dependsOn fullJar

// Replace published jar artifact with shadowJar 
configurations {
    [runtimeElements, apiElements].each {
        it.outgoing {
            artifacts.clear()
            artifact(fullJar)
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    def ENV = System.getenv()
    if (ENV.MAVEN_URL) {
        repositories.maven {
            url ENV.MAVEN_URL
            if (ENV.MAVEN_USERNAME) {
                credentials {
                    username ENV.MAVEN_USERNAME
                    password ENV.MAVEN_PASSWORD
                }
            }
        }
    }
}
